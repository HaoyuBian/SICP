#|Ackermannâ€™s function|#

(define (A x y) 
	(cond ((= y 0) 0)
		((= x 0) (* 2 y))
		((= y 1) 2)
		(else (A (- x 1) (A x (- y 1))))))


#|
if y = 0, 0
if x = 0, 2y
if y = 1, 2
else A (x-1, A(x, y-1))|#

1.
(A 1 10) = (A 0 (A 1 9)) = (* 2 (A 1 9)) = (*2 (A 0 (A 1 8))) 

= (* 2 (* 2 (A 1 8)))
=.....

= (* 2 (* 2 ...(A 1 1))) = 2^10

2.
(A 2 4) = (A 1 (A 2 3)) = (A 1 (A 1 (A 2 2)))
= (A 1(A 1 (A 1 (A 2 1)))) = (A 1(A 1 (A 1 (A 1 2)))) = 2^(2^4)

3.
(A 3 3)
(A 2 (A 3 2))
(A 2 (A 2 A(3 1)))
(A 2 (A 2 2))
(A 2 4)

= 2^(2^4)

4
(define (f n) (A 0 n)) computes 2n
(define (g n) (A 1 n)) computes 2^n
(define (h n) (A 2 n)) computes 2^(h n-1)

